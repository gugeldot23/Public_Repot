#!/bin/bash


#TO DO 
# -banner
banner() {
echo '
__________               .__         __________                            
\______   \_____    _____|__| ____   \______   \ ____   ____  ____   ____  
 |    |  _/\__  \  /  ___/  |/ ___\   |       _// __ \_/ ___\/  _ \ /    \ 
 |    |   \ / __ \_\___ \|  \  \___   |    |   \  ___/\  \__(  <_> )   |  \
 |______  /(____  /____  >__|\___  >  |____|_  /\___  >\___  >____/|___|  /
        \/      \/     \/        \/          \/     \/     \/           \/ 

        '

}

banner
#Argument interpretation code 
if [ -z $1 ] ; then 
echo "Enter arguments, --help option available"
exit
fi

case $1 in 
--help) 
echo "
Usage: bsr -d DOMAIN [-a | -p | -t | -n]  [-o | --output] [PATH]

ALWAYS PUT -d argument first !! 

OPTIONS
 First postion: 
  -d, --domain                             Write the domain involved in the analysis
 ------
 Second postion: 
  -a, --all                                Carry all scans DEFAULT
  -p, --ping                               Ping analysis
  -t, --traceroute                         Traceroute analysis
  -n  --nmap                               Nmap analysis
  IF YOU NEED TO PUT ANOTHER OUTPUT FOR THE FILE, IN THIS POSITION WRITE A '-' and write -o or --output
 ------
  Third postion: 
  -o  --output 				Define the absolute path of the file (END WITH / !!)
                                         -> /home/USER by defualt 
 ------
"
exit
;;
-d | --domain) 
targ=$2 #domain name 
;;
-a | --all | -p | --ping | -t | --traceroute | -n | -nmap | -o | --output) 
echo "This argument must not be placed here, first delclare the domain"
exit
;;
*)
echo "Not valid agrument, --help option available"
exit
esac

case $3 in 
-a | --all )
mode="a"
;;
-p | --ping )
mode="p"
;; 
-t | --traceroute)
mode="p"
;;
-n | --nmap) 
mode="n"
;;
*) 
mode="a"
esac 

#Output file code
if [ -z $4 ] ; then 
path="/home/`whoami`/" #Defualt directory
else 
path="$5"
fi
#Filter directoru 
if [ -d $5 ]; then
echo -n ""
else	
echo "This directory does not exist, please enter a valid one"
exit
fi

#Filter modules
   #domain check  
   fping $2 &> /dev/null 
   if [ $? = 2 ]; then 
   echo "Domain not vaild"
   exit
   fi 


#SETTINGS 
filenm="$2_BSR"  #filename
filert="$path$filenm"
iptarg=$(ping -c1 $2 | grep "PING $2" | cut -d' ' -f3)		

#----------------------

echo "Created the file at $path with the name $filenm "
echo "BASIC RECON SCAN FILE --------------------" >> $filert
echo "Target Name: $2 | Target IP: $iptarg | Mode: $mode | Time of exec: `date`" >> $filert

# CORE CODE 

case $mode in 
 	a) #all 
	echo "Mode selected: All"
	
	echo "Begining Ping scan..."
    echo "PING SCAN ----------" >> $filert
    ping -c5 $2 >> $filert
    echo "----------" >> $filert
    echo "Ping scan completed"

	echo "Begining traceroute scan..."
    echo "Traceroute SCAN ----------" >> $filert
    traceroute $2 >> $filert
    echo "----------" >> $filert
    echo "Traceroute scan completed"


	echo "Begining nmap scan..."
    echo "Nmap SCAN ----------" >> $filert
    nmap $2 >> $filert
    echo "----------" >> $filert
    echo "Nmap scan completed"
	;;
	p)
	echo "Mode selected: Ping"
	echo "PING SCAN ----------" >> $filert
    ping -c5 $2 >> $filert
    echo "----------" >> $filert
	;;
	t)
	echo "Mode selected: Traceroute"
	echo "Traceroute SCAN ----------" >> $filert
    traceroute $2 >> $filert
    echo "----------" >> $filert
	;;
	n)
	echo "Mode selected: Nmap"
	echo "Nmap SCAN ----------" >> $filert
    nmap $2 >> $filert
    echo "----------" >> $filert
	;;
	*)
	esac 
